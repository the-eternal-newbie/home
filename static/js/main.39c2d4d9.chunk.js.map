{"version":3,"sources":["utils/redux/actions.ts","utils/redux/reducers.ts","utils/redux/store.ts","containers/Contact/Contact.container.tsx","containers/HomePage/HomePage.styled.ts","utils/constants/consoleLog.ts","utils/styles/_colors.ts","components/Terminal/Terminal.styled.ts","components/Terminal/Terminal.tsx","utils/styles/_animations.ts","components/Text/Text.styled.ts","components/Text/Text.tsx","newbie.svg","containers/HomePage/components/TerminalStrip.tsx","components/Button/Button.styled.ts","components/Button/Button.tsx","components/Portrait/Portrait.styled.ts","components/Portrait/Portrait.tsx","containers/HomePage/components/AboutStrip.tsx","components/MenuBar/MenuBar.styled.ts","components/Logo/Logo.styled.ts","components/Logo/Logo.tsx","components/MenuBar/MenuBar.tsx","containers/HomePage/HomePage.tsx","containers/HomePage/HomePage.container.tsx","containers/Resume/Resume.container.tsx","App.tsx","utils/i18n/index.ts","utils/i18n/en.ts","utils/i18n/es.ts","utils/i18n/ConnectedIntlProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_ARTICLE","SET_LANG","setLang","payload","type","initialState","articles","lang","rootReducer","state","action","Object","assign","concat","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","store","createStore","persistStore","ContactContainer","TerminalSection","styled","section","AboutSection","AboutContainer","div","AboutBox","Container","consoleLines","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","colors","TerminalFrame","Dot","p","DotContainer","TerminalHeader","TerminalTextHeader","TypeWriter","pre","Bash","span","Terminal","style","background","display","color","textDecoration","onInit","typewriter","pauseFor","deleteAll","start","options","loop","strings","autoStart","fdInBtm","keyframes","fdInLft","StyledText","fontFamily","fontStyle","fontSize","fontWeight","lineHeight","letterSpacing","props","animation","getAnimation","connect","id","TerminalStrip","src","logo","width","textAlign","minWidth","marginTop","PrimaryButton","button","SecondaryButton","CircleButton","backgroundColor","Button","onClick","navigation","text","to","getButtonType","PortraitContainer","img","size","variation","filter","Portrait","url","AboutStrip","marginBottom","maxWidth","justifyContent","height","MenuBarContainer","header","NavBar","nav","NavElement","NavElementLink","NavLink","NavContainer","Square","LogoContainer","Title","Logo","opacity","position","left","top","marginLeft","marginRight","dispatch","borderRight","margin","HomePage","HomePageContainer","useEffect","document","title","ResumeContainer","App","exact","path","component","Contact","Resume","languages","en","toUpperCase","es","children","messages","locale","defaultLocale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"0PAAaA,EAAc,cACdC,EAAW,WAOXC,EAAU,SAACC,GACpB,MAAO,CAAEC,KAAMH,EAAUE,YCLvBE,EAAe,CACjBC,SAAU,GACVC,KAAM,MAeKC,EAZc,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC3D,OAAIA,EAAON,OAASJ,EACTW,OAAOC,OAAO,GAAIH,EAAO,CAC5BH,SAAUG,EAAMH,SAASO,OAAOH,EAAOP,WAG3CO,EAAON,OAASH,EACTU,OAAOC,OAAO,GAAIH,EAAO,CAAEF,KAAMG,EAAOP,UAE5CM,GCbLK,EAAgB,CAClBC,IAAK,OACLC,UAAW,CAAC,QACZC,Q,OAAAA,GAGEC,EAAmBC,YAAeL,EAAeN,GAGjDY,EAAQC,YAAYH,G,GACRI,YAAaF,G,aCThBG,EAJoB,WAC/B,OAAO,2C,cCDEC,EAAkBC,IAAOC,QAAV,yKASfC,EAAeF,IAAOC,QAAV,4IAQZE,EAAiBH,IAAOI,IAAV,qEAKdC,EAAWL,IAAOI,IAAV,8HAORE,EAAYN,IAAOC,QAAV,kE,iBCnBPM,EAZgB,CAC3B,0DACA,0EACA,mCACA,wBACA,uBACA,2BACA,gEACA,uBACA,sBCTSC,EAAqB,SAACC,EAAaC,GAC5C,IAAIC,GAAW,EAED,KAAVF,EAAI,KACJA,EAAMA,EAAIG,MAAM,GAChBD,GAAW,GAGf,IAAME,EAAMC,SAASL,EAAK,IAEtBM,GAAKF,GAAO,IAAMH,EAElBK,EAAI,IAAKA,EAAI,IACRA,EAAI,IAAGA,EAAI,GAEpB,IAAIC,GAAMH,GAAO,EAAK,KAAUH,EAE5BM,EAAI,IAAKA,EAAI,IACRA,EAAI,IAAGA,EAAI,GAEpB,IAAIC,GAAW,IAANJ,GAAkBH,EAK3B,OAHIO,EAAI,IAAKA,EAAI,IACRA,EAAI,IAAGA,EAAI,IAEZN,EAAW,IAAM,KAAOM,EAAKD,GAAK,EAAMD,GAAK,IAAKG,SAAS,KAG1DC,EACD,UADCA,EAED,UAFCA,EAIF,UAJEA,EAOE,UAPFA,EAQF,UAREA,GAUA,UAVAA,GAcH,UAdGA,GAeH,UAfGA,GAgBH,UAhBGA,GAoBF,UApBEA,GAwBD,UAxBCA,GAyBA,UAzBAA,GA0BF,UCnDEC,GAAgBpB,IAAOI,IAAV,+QACFe,GAYXE,GAAMrB,IAAOsB,EAAV,0FAMHC,GAAevB,IAAOI,IAAV,8HAOZoB,GAAiBxB,IAAOI,IAAV,+QAUHe,GAGXM,GAAqBzB,IAAOI,IAAV,uMAUlBsB,GAAa1B,IAAO2B,IAAV,qIACVR,GAMAS,GAAO5B,IAAO6B,KAAV,qIAEJV,ICMEW,GArDY,WACvB,OACI,eAACV,GAAD,WACI,eAACI,GAAD,WACI,eAACD,GAAD,WACI,cAACF,GAAD,CAAKU,MAAO,CAAEC,WAAYb,MAC1B,cAACE,GAAD,CAAKU,MAAO,CAAEC,WAAYb,MAC1B,cAACE,GAAD,CAAKU,MAAO,CAAEC,WAAYb,SAE9B,cAACM,GAAD,iEAEJ,gCACI,eAACG,GAAD,WACI,mBAAGG,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,2BACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,gBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,oBAEJ,uBACA,cAACS,GAAD,UACI,mBAAGG,MAAO,CAAEE,QAAS,SAAUC,MAAOf,GAAtC,yCAEJ,uBACA,eAACS,GAAD,WACI,mBAAGG,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,2BACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,gBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,GAAegB,eAAgB,aAArE,sCAIJ,uBACA,eAACP,GAAD,WACI,mBAAGG,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,2BACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,wBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,oBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,oBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,eACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,qBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,IAAtC,mBACA,mBAAGY,MAAO,CAAEE,QAAS,SAAUC,MAAOf,GAAtC,gCAGR,cAACO,GAAD,UACI,cAAC,IAAD,CACIU,OAAQ,SAAAC,GACJA,EAAWC,SAAS,MAAMC,YAAYC,SAE1CC,QAAS,CAAEC,MAAM,EAAMC,QAASpC,EAAcqC,WAAW,W,SCrDhEC,I,MALUC,YAAH,+GAKGA,YAAH,kIAQPC,GAAUD,YAAH,kICIPE,GAAahD,IAAOsB,EAAV,8OACJ,gBAAGS,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOkB,YAAalB,EAAMkB,WAAa,6BAC7D,gBAAGlB,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQH,EAAMG,MAAQf,KACxC,gBAAGY,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOmB,WAAYnB,EAAMmB,UAAY,YACtD,gBAAGnB,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOoB,UAAWpB,EAAMoB,SAAW,UACjD,gBAAGpB,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOqB,YAAarB,EAAMqB,WAAa,SACvD,gBAAGrB,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOsB,YAAatB,EAAMsB,WAAa,UACpD,gBAAGtB,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOuB,eAAgBvB,EAAMuB,cAAgB,SAC7D,SAACC,GAAD,OArBD,SAACC,GAClB,OAAQA,GACJ,IAAK,UACD,OAAOX,GACX,IAAK,UACD,OAAOE,GACX,IAAK,UACD,MACJ,QACI,MAAO,QAYqBU,CAAaF,EAAMC,cCN5CE,I,oCAAAA,gBALf,SAAyB1E,GAErB,MAAO,CAAEF,KADIE,EAAMF,QAIR4E,EAfe,SAACH,GAC3B,IAAQI,EAA+BJ,EAA/BI,GAAI5B,EAA2BwB,EAA3BxB,MAAOjD,EAAoByE,EAApBzE,KAAM0E,EAAcD,EAAdC,UACzB,OACI,cAACR,GAAD,CAAkCjB,MAAOA,EAAOyB,UAAWA,EAA3D,SACI,cAAC,KAAD,CAAkBG,GAAIA,KAD1B,UAAoBA,EAApB,YAA0B7E,OCTnB,OAA0B,mCC+B1B8E,GAxBiB,WAC5B,OACI,eAAC7D,EAAD,WACI,qBAAK8D,IAAKC,GAAMC,MAAO,UACvB,cAAC,GAAD,CACIJ,GAAI,sBACJH,UAAW,UACXzB,MAAO,CACHG,MAAOf,GACP8B,WAAY,2BACZE,SAAU,MACVC,WAAY,IACZE,cAAe,MACfD,WAAY,OACZW,UAAW,SACXC,SAAU,QACVC,UAAW,UAGnB,cAAC,GAAD,QCvBCC,GAAgBnE,IAAOoE,OAAV,uDAIbC,GAAkBrE,IAAOoE,OAAV,uDAIfE,GAAetE,IAAOoE,OAAV,iKAKG,gBAAGrC,EAAH,EAAGA,MAAH,OACX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOwC,iBACD/D,EAAmBuB,EAAMwC,iBAAkB,IAC3C/D,EAAmBW,GAAa,OCqBnCqD,GAlCmB,SAACjB,GAC/B,IAAQkB,EAA+ClB,EAA/CkB,QAAS9F,EAAsC4E,EAAtC5E,KAAMoD,EAAgCwB,EAAhCxB,MAAO2C,EAAyBnB,EAAzBmB,WAAYC,EAAapB,EAAboB,KAAMC,EAAOrB,EAAPqB,GAE1CC,EAAgB,WAClB,OAAQlG,GACJ,IAAK,UACD,OACI,cAACwF,GAAD,CAAepC,MAAOA,EAAO0C,QAASA,EAAtC,SACI,cAAC,GAAD,CAAMd,GAAIgB,MAGtB,IAAK,YACD,OACI,cAACN,GAAD,CAAiBtC,MAAOA,EAAO0C,QAASA,EAAxC,SACI,cAAC,GAAD,CAAMd,GAAIgB,EAAM5C,MAAO,CAAEG,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOG,WAGnD,IAAK,SACD,OACI,cAACoC,GAAD,CAAcvC,MAAOA,EAAO0C,QAASA,EAArC,SACI,cAAC,GAAD,CACId,GAAIgB,EACJ5C,MAAO,CAAEG,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOG,MAAOiB,SAAQ,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,SAAUC,WAAU,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAAOqB,gBAI5F,QACI,OAAO,wBAAQqB,QAASA,MAIpC,OAAOC,GAAcE,EAAK,cAAC,IAAD,CAASA,GAAIA,EAAb,SAAkBC,MAA6BA,KClChEC,GAAoB9E,IAAO+E,IAAV,gIAEjB,SAACxB,GAAD,MAAsC,UAAfA,EAAMyB,KAAmB,QAAyB,WAAfzB,EAAMyB,KAAoB,QAAU,WACtF,SAACzB,GAAD,MAA2C,WAApBA,EAAM0B,UAAyB,MAAQ,QACrE,SAAC1B,GAAD,MAAwC,cAAjBA,EAAM2B,OAAyB,kBAAoB,UCIzEC,GALuB,SAAC5B,GACnC,IAAQ2B,EAAiC3B,EAAjC2B,OAAQD,EAAyB1B,EAAzB0B,UAAWD,EAAczB,EAAdyB,KAAMI,EAAQ7B,EAAR6B,IACjC,OAAO,cAACN,GAAD,CAAmBG,UAAWA,EAAWC,OAAQA,EAAQF,KAAMA,EAAMnB,IAAKuB,GAJ/D,gFC0FPC,GAvFc,WACzB,OACI,cAACnF,EAAD,UACI,eAACC,EAAD,WACI,cAAC,GAAD,CAAU6E,KAAM,QAASC,UAAW,SAAUC,OAAQ,YAAaE,IAAK,KACxE,eAAC/E,EAAD,WACI,cAAC,GAAD,CACIsD,GAAI,oBACJ5B,MAAO,CACHoB,SAAU,QACVC,WAAY,IACZE,cAAe,QACfgC,aAAc,UAGtB,cAAC,GAAD,CACI3B,GAAI,cACJ5B,MAAO,CACHoB,SAAU,OACVC,WAAY,IACZE,cAAe,WAGvB,cAAC,GAAD,CACIK,GAAI,sBACJ5B,MAAO,CACHoB,SAAU,OACVC,WAAY,IACZH,WAAY,2BACZK,cAAe,QACfW,SAAU,QACVsB,SAAU,WAGlB,sBAAKxD,MAAO,CAAEE,QAAS,OAAQ8B,MAAO,MAAOyB,eAAgB,gBAAiBtB,UAAW,QAAzF,UACI,cAAC,GAAD,CACIQ,YAAU,EACVE,GAAI,UACJD,KAAM,iBACNhG,KAAM,SACNoD,MAAO,CACHgC,MAAO,QACP0B,OAAQ,QACRzD,WAAYb,GACZe,MAAOf,EACPgC,SAAU,OACVC,WAAY,IACZY,UAAW,YAGnB,cAAC,GAAD,CACIU,YAAU,EACVE,GAAI,UACJD,KAAM,mBACNhG,KAAM,SACNoD,MAAO,CACHgC,MAAO,QACP0B,OAAQ,QACRzD,WAAYb,GACZe,MAAOf,EACPgC,SAAU,OACVC,WAAY,IACZY,UAAW,YAGnB,cAAC,GAAD,CACIU,YAAU,EACVE,GAAI,UACJD,KAAM,kBACNhG,KAAM,SACNoD,MAAO,CACHgC,MAAO,QACP0B,OAAQ,QACRlB,gBAAiBpD,GACjBe,MAAOf,EACPgC,SAAU,OACVC,WAAY,IACZY,UAAW,wBChF9B0B,GAAmB1F,IAAO2F,OAAV,0NACLxE,GASXyE,GAAS5F,IAAO6F,IAAV,2IAQNC,GAAa9F,IAAOoE,OAAV,wLAEVjD,GASA4E,GAAiB/F,YAAOgG,IAAPhG,CAAH,yRAEdmB,GAaA8E,GAAejG,IAAOI,IAAV,sNC5CZ8F,GAASlG,IAAOI,IAAV,+GACKe,IACV,gBAAGY,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO0D,QAAS1D,EAAM0D,OAAS,UAChD,gBAAG1D,EAAH,EAAGA,MAAH,OAAqB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOgC,OAAQhC,EAAMgC,MAAQ,UAI7CoC,GAAgBnG,IAAOI,IAAV,qLASbgG,GAAQpG,IAAOsB,EAAV,uOCwBH+E,GArCe,SAAC9C,GAC3B,IAAQyB,EAASzB,EAATyB,KACR,EACa,UAATA,EACM,CAAEjB,MAAO,QAAS0B,OAAQ,SACjB,WAATT,EACA,CAAEjB,MAAO,OAAQ0B,OAAQ,QACzB,CAAE1B,MAAO,OAAQ0B,OAAQ,QAL3B1B,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,OAMf,OACI,eAACU,GAAD,WACI,cAACD,GAAD,CAAQnE,MAAO,CAAEgC,MAAOA,EAAO0B,OAAQA,KACvC,cAACS,GAAD,CACInE,MAAO,CAAEgC,MAAOA,EAAO0B,OAAQA,EAAQa,QAAS,GAAKC,SAAU,WAAYC,KAAM,OAAQC,IAAK,UAElG,eAACL,GAAD,iBAEI,uBAFJ,UAII,uBAJJ,YAOA,cAAC,GAAD,CACIzC,GAAI,sBACJH,UAAW,UACXzB,MAAO,CACHG,MAAOf,EACPkC,WAAY,MACZF,SAAU,OACVD,UAAW,SACXI,cAAe,MACfoD,WAAY,cCSjBhD,oBALf,SAAyB1E,GAErB,MAAO,CAAEF,KADIE,EAAMF,QAIR4E,EArCW,WACtB,OACI,eAACgC,GAAD,WACI,cAAC,GAAD,CAAM/G,KAAM,OAAQqG,KAAM,WAC1B,eAACiB,GAAD,WACI,sBAAKlE,MAAO,CAAE4E,YAAa,QAA3B,UACI,cAACb,GAAD,CAAYrB,QAAS,kBAAM9E,EAAMiH,SAASnI,EAAQ,QAAlD,gBACA,cAACqH,GAAD,CAAYrB,QAAS,kBAAM9E,EAAMiH,SAASnI,EAAQ,QAAlD,mBAEJ,eAACmH,GAAD,WACI,cAACG,GAAD,CAAgBhE,MAAO,CAAE8E,YAAa,mBAAqBjC,GAAG,WAA9D,SACI,cAAC,GAAD,CACIjB,GAAI,kBACJ5B,MAAO,CAAEG,MAAOf,EAAkB2F,OAAQ,MAAO3D,SAAU,YAGnE,cAAC4C,GAAD,CAAgBhE,MAAO,CAAE8E,YAAa,mBAAqBjC,GAAG,YAA9D,SACI,cAAC,GAAD,CACIjB,GAAI,mBACJ5B,MAAO,CAAEG,MAAOf,EAAkB2F,OAAQ,MAAO3D,SAAU,YAGnE,cAAC4C,GAAD,CAAgBnB,GAAG,UAAnB,SACI,cAAC,GAAD,CAAMjB,GAAI,iBAAkB5B,MAAO,CAAEG,MAAOf,EAAkBgC,SAAU,wBCZjF4D,GAdY,WACvB,OACI,qCACI,cAAC,GAAD,IACA,cAACzG,EAAD,UACI,cAAC,GAAD,MAEJ,cAACA,EAAD,UACI,cAAC,GAAD,UCHD0G,GARqB,WAKhC,OAJAC,qBAAU,WACNC,SAASC,MAAQ,wBAGd,cAAC,GAAD,KCFIC,GAJmB,WAC9B,OAAO,0CCcIC,GAVO,WAClB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,KACjC,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWE,SCNtCC,GAAY,CACrBC,GCPc,CACd,sBAAuB,mCAAmCC,cAC1D,kBAAmB,UAAUA,cAC7B,mBAAoB,WAAWA,cAC/B,iBAAkB,SAASA,cAC3B,oBAAqB,SACrB,cAAe,iBACf,sBACI,2GACJ,sBAAuB,wBDDvBC,GERc,CACd,sBAAuB,iCAA2BD,cAClD,kBAAmB,WAAWA,cAC9B,mBAAoB,YAAYA,cAChC,iBAAkB,gBAAaA,cAC/B,oBAAqB,YACrB,cAAe,sBACf,sBACI,kIACJ,sBAAuB,6B,SCWZnE,oBALf,SAAyB1E,GAErB,MAAO,CAAEF,KADIE,EAAMF,QAIR4E,EAde,SAACH,GAC3B,IAAQwE,EAAmBxE,EAAnBwE,SAAUjJ,EAASyE,EAATzE,KAClB,OACI,cAAC,KAAD,CAAckJ,SAAUL,GAAU7I,GAA6BmJ,OAAQnJ,EAAMoJ,cAAc,KAA3F,SACKH,OCKEI,GAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCpBQ,IAASC,OACL,cAAC,IAAD,CAAUlJ,MAAOA,EAAjB,SACI,cAAC,GAAD,UACI,cAAC,IAAD,UACI,cAAC,GAAD,UAIZuH,SAAS4B,eAAe,SAM5BX,O","file":"static/js/main.39c2d4d9.chunk.js","sourcesContent":["export const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const SET_LANG = 'SET_LANG';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const addArticle = (payload: unknown) => {\n    return { type: ADD_ARTICLE, payload };\n};\n\nexport const setLang = (payload: string): { type: string; payload: string } => {\n    return { type: SET_LANG, payload };\n};\n","import { Reducer } from 'redux';\nimport { ADD_ARTICLE, SET_LANG } from './actions';\nimport { SupportedLanguages } from '../i18n/index';\n\nconst initialState = {\n    articles: [],\n    lang: 'en' as SupportedLanguages,\n};\n\nconst rootReducer: Reducer = (state = initialState, action) => {\n    if (action.type === ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload),\n        });\n    }\n    if (action.type === SET_LANG) {\n        return Object.assign({}, state, { lang: action.payload as SupportedLanguages });\n    }\n    return state;\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    whitelist: ['lang'],\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\n\nconst ContactContainer: React.FC = () => {\n    return <div>Contact</div>;\n};\n\nexport default ContactContainer;\n","import styled from 'styled-components';\n\nexport const TerminalSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 60%;\n`;\n\nexport const AboutSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 60%;\n`;\n\nexport const AboutContainer = styled.div`\n    max-width: 72%;\n    display: flex;\n`;\n\nexport const AboutBox = styled.div`\n    display: flex;\n    margin-left: 60px;\n    min-width: '200px';\n    flex-direction: column;\n`;\n\nexport const Container = styled.section`\n    width: 100%;\n    height: 800px;\n`;\n","const consoleLines: string[] = [\n    '#include\\nint main(void) {\\n\\tputs(\"Hello, world!\");\\n}',\n    '#include\\nint main() {\\n\\tstd::cout << \"Hello, world!\";\\n\\treturn 0;\\n}',\n    'document.write(\"Hello, world!\");',\n    'print \"Hello, world!\"',\n    'puts \"Hello, world!\"',\n    'println(\"Hello, world!\")',\n    'program HelloWorld;\\nbegin\\n  WriteLn(\"Hello, world!\");\\nend.',\n    'cat(\"Hello, world!\")',\n    'echo \"Hello World\"',\n];\n\nexport default consoleLines;\n","export const LightenDarkenColor = (col: string, amt: number): string => {\n    let usePound = false;\n\n    if (col[0] == '#') {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    const num = parseInt(col, 16);\n\n    let r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    let b = ((num >> 8) & 0x00ff) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    let g = (num & 0x0000ff) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\n};\n\nexport const colors = {\n    white1: '#F3F3F3',\n    white2: '#E3E3E3',\n    grey1: '#D2D5D2',\n    grey2: '#A7AAA7',\n    grey3: '#7D807D',\n    grey4: '#525552',\n    greyblack: '#282B28',\n    black: '#000000',\n    yellow1: '#FFF0AB',\n    yellow2: '#FFE156',\n    yellow3: '#BFA941',\n    yellow4: '#80712B',\n    yellow5: '#403816',\n    red1: '#FFBEB6',\n    red2: '#FF9D92',\n    red3: '#FF3B25',\n    red4: '#AA2719',\n    red5: '#55140C',\n    pink1: '#F4BFDB',\n    pink2: '#C399AF',\n    pink3: '#927383',\n    pink4: '#624C58',\n    pink5: '#31262C',\n    green1: '#87ac6e',\n    purple1: '#9961A9',\n    blue1: '#60ADEC',\n};\n","import styled from 'styled-components';\nimport { colors } from '../../utils/styles/_colors';\n\nexport const TerminalFrame = styled.div`\n    background-color: ${colors.greyblack};\n    border-radius: 6px;\n    padding-left: 20px;\n    padding-top: 30px;\n    width: 60%;\n    min-width: 400px;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n`;\n\nexport const Dot = styled.p`\n    border-radius: 50%;\n    width: 10px;\n    height: 10px;\n`;\n\nexport const DotContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width: 50px;\n    margin-left: 10px;\n`;\n\nexport const TerminalHeader = styled.div`\n    width: auto;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    font-weight: 700;\n    border-radius: 4px 4px 0px 0px;\n    font-size: 0.75em;\n    margin-left: -20px;\n    margin-top: -30px;\n    background-color: ${colors.white2};\n`;\n\nexport const TerminalTextHeader = styled.div`\n    width: 100%;\n    margin-left: 20px;\n    margin-right: 20px;\n    text-align: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nexport const TypeWriter = styled.pre`\n    color: ${colors.white1};\n    font-family: 'Roboto Mono', monospace;\n    font-weight: 700;\n    font-size: 15px;\n`;\n\nexport const Bash = styled.span`\n    font-size: 15px;\n    color: ${colors.green1};\n    font-weight: 700;\n    font-family: 'Roboto Mono', monospace;\n`;\n","import React from 'react';\nimport Typewriter from 'typewriter-effect';\nimport { consoleLines } from '../../utils/constants';\nimport { colors } from '../../utils/styles/_colors';\nimport {\n    Bash,\n    Dot,\n    DotContainer,\n    TerminalFrame,\n    TerminalHeader,\n    TerminalTextHeader,\n    TypeWriter,\n} from './Terminal.styled';\n\nconst Terminal: React.FC = () => {\n    return (\n        <TerminalFrame>\n            <TerminalHeader>\n                <DotContainer>\n                    <Dot style={{ background: colors.red2 }} />\n                    <Dot style={{ background: colors.yellow2 }} />\n                    <Dot style={{ background: colors.green1 }} />\n                </DotContainer>\n                <TerminalTextHeader>/home/the-eternal-newbie/development/portfolio/</TerminalTextHeader>\n            </TerminalHeader>\n            <div>\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>~ </p>\n                    <p style={{ display: 'inline', color: colors.green1 }}>pwd</p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.white1 }}>/home/the-eternal-newbie/</p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>~ </p>\n                    <p style={{ display: 'inline', color: colors.green1, textDecoration: 'underline' }}>\n                        development/portfolio\n                    </p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>portfolio </p>\n                    <p style={{ display: 'inline', color: colors.pink2 }}> git:(</p>\n                    <p style={{ display: 'inline', color: colors.red3 }}>master</p>\n                    <p style={{ display: 'inline', color: colors.pink2 }}>)</p>\n                    <p style={{ display: 'inline', color: colors.yellow2 }}> ✘</p>\n                    <p style={{ display: 'inline', color: colors.purple1 }}> vim </p>\n                    <p style={{ display: 'inline', color: colors.white1 }}> helloworld </p>\n                </Bash>\n            </div>\n            <TypeWriter>\n                <Typewriter\n                    onInit={typewriter => {\n                        typewriter.pauseFor(2500).deleteAll().start();\n                    }}\n                    options={{ loop: true, strings: consoleLines, autoStart: true }}\n                />\n            </TypeWriter>\n        </TerminalFrame>\n    );\n};\n\nexport default Terminal;\n","import { keyframes } from 'styled-components';\n\nexport const rollout = keyframes`\n    0% { transform: translateY(-100px); }\n    100% { transform: translateY(0); }\n`;\n\nexport const fdInBtm = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(100%);\n    }\n    to { opacity: 1 }\n`;\n\nexport const fdInLft = keyframes`\n    from {\n        opacity: 0;\n        transform: translateX(-100%);\n    }\n    to { opacity: 1 }\n`;\n","import styled from 'styled-components';\nimport '../../utils/styles/_fonts.css';\nimport { fdInBtm, fdInLft } from '../../utils/styles/_animations';\nimport { colors } from '../../utils/styles/_colors';\nimport { IText } from './Text.types';\n\nconst getAnimation = (animation: string | undefined) => {\n    switch (animation) {\n        case 'fdInBtm':\n            return fdInBtm;\n        case 'fdInLft':\n            return fdInLft;\n        case 'fdInRgt':\n            break;\n        default:\n            return 'none';\n    }\n};\n\nexport const StyledText = styled.p`\n    font-family: ${({ style }) => (style?.fontFamily ? style.fontFamily : \"'Work Sans', sans-serif\")};\n    color: ${({ style }) => (style?.color ? style.color : colors.black)};\n    font-style: ${({ style }) => (style?.fontStyle ? style.fontStyle : 'normal')};\n    font-size: ${({ style }) => (style?.fontSize ? style.fontSize : '18px')};\n    font-weight: ${({ style }) => (style?.fontWeight ? style.fontWeight : '100')};\n    line-height: ${({ style }) => (style?.lineHeight ? style.lineHeight : '14px')};\n    letter-spacing: ${({ style }) => (style?.letterSpacing ? style.letterSpacing : '1px')};\n    animation-name: ${(props: IText) => getAnimation(props.animation)};\n    animation-duration: 1s;\n`;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { StyledText } from './Text.styled';\nimport { IText } from './Text.types';\n\nconst Text: React.FC<IText> = (props: IText) => {\n    const { id, style, lang, animation } = props;\n    return (\n        <StyledText key={`${id}-${lang}`} style={style} animation={animation}>\n            <FormattedMessage id={id} />\n        </StyledText>\n    );\n};\n\n// export default HomePageContainer;\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(Text);\n","export default __webpack_public_path__ + \"static/media/newbie.a8aea866.svg\";","import React from 'react';\nimport { TerminalSection } from '../HomePage.styled';\nimport Terminal from '../../../components/Terminal/Terminal';\nimport Text from '../../../components/Text/Text';\nimport { colors } from '../../../utils/styles/_colors';\nimport logo from '../../../newbie.svg';\n\nconst TerminalStrip: React.FC = () => {\n    return (\n        <TerminalSection>\n            <img src={logo} width={'150px'} />\n            <Text\n                id={'Generic.Catchphrase'}\n                animation={'fdInBtm'}\n                style={{\n                    color: colors.red3,\n                    fontFamily: \"'Montserrat', sans-serif\",\n                    fontSize: '2vw',\n                    fontWeight: 800,\n                    letterSpacing: '3px',\n                    lineHeight: '28px',\n                    textAlign: 'center',\n                    minWidth: '520px',\n                    marginTop: '10px',\n                }}\n            />\n            <Terminal />\n        </TerminalSection>\n    );\n};\n\nexport default TerminalStrip;\n","import styled from 'styled-components';\nimport { colors, LightenDarkenColor } from '../../utils/styles/_colors';\n\nexport const PrimaryButton = styled.button`\n    border-radius: 50%;\n`;\n\nexport const SecondaryButton = styled.button`\n    border-radius: 50%;\n`;\n\nexport const CircleButton = styled.button`\n    border-radius: 50%;\n    cursor: pointer;\n    border: none;\n    &:hover {\n        background-color: ${({ style }) =>\n            style?.backgroundColor\n                ? LightenDarkenColor(style.backgroundColor, -40)\n                : LightenDarkenColor(colors.red2, 20)} !important;\n    }\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Text from '../Text/Text';\nimport { CircleButton, PrimaryButton, SecondaryButton } from './Button.styled';\nimport { IButton } from './Button.types';\n\nconst Button: React.FC<IButton> = (props: IButton) => {\n    const { onClick, type, style, navigation, text, to } = props;\n\n    const getButtonType = () => {\n        switch (type) {\n            case 'primary':\n                return (\n                    <PrimaryButton style={style} onClick={onClick}>\n                        <Text id={text} />\n                    </PrimaryButton>\n                );\n            case 'secondary':\n                return (\n                    <SecondaryButton style={style} onClick={onClick}>\n                        <Text id={text} style={{ color: style?.color }} />\n                    </SecondaryButton>\n                );\n            case 'circle':\n                return (\n                    <CircleButton style={style} onClick={onClick}>\n                        <Text\n                            id={text}\n                            style={{ color: style?.color, fontSize: style?.fontSize, fontWeight: style?.fontWeight }}\n                        />\n                    </CircleButton>\n                );\n            default:\n                return <button onClick={onClick} />;\n        }\n    };\n\n    return navigation && to ? <NavLink to={to}>{getButtonType()}</NavLink> : getButtonType();\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { IPortrait } from './Portrait.types';\n\nexport const PortraitContainer = styled.img`\n    -webkit-filter: grayscale(100%);\n    width: ${(props: IPortrait) => (props.size === 'small' ? '120px' : props.size === 'medium' ? '240px' : '480px')};\n    border-radius: ${(props: IPortrait) => (props.variation === 'circle' ? '50%' : '0%')};\n    filter: ${(props: IPortrait) => (props.filter === 'greyscale' ? 'grayscale(100%)' : 'none')};\n`;\n","import React from 'react';\nimport { PortraitContainer } from './Portrait.styled';\nimport { IPortrait } from './Portrait.types';\n\nconst GENERIC_PHOTO = 'https://icon-library.com/images/generic-user-icon/generic-user-icon-19.jpg';\n\nconst Portrait: React.FC<IPortrait> = (props: IPortrait) => {\n    const { filter, variation, size, url } = props;\n    return <PortraitContainer variation={variation} filter={filter} size={size} src={url ? url : GENERIC_PHOTO} />;\n};\n\nexport default Portrait;\n","import React from 'react';\nimport Button from '../../../components/Button/Button';\nimport Portrait from '../../../components/Portrait/Portrait';\nimport Text from '../../../components/Text/Text';\nimport { colors } from '../../../utils/styles/_colors';\nimport { AboutBox, AboutContainer, AboutSection } from '../HomePage.styled';\n\nconst AboutStrip: React.FC = () => {\n    return (\n        <AboutSection>\n            <AboutContainer>\n                <Portrait size={'large'} variation={'circle'} filter={'greyscale'} url={''} />\n                <AboutBox>\n                    <Text\n                        id={'Generic.Greetings'}\n                        style={{\n                            fontSize: '100px',\n                            fontWeight: 600,\n                            letterSpacing: '0.8px',\n                            marginBottom: '45px',\n                        }}\n                    />\n                    <Text\n                        id={'About.Title'}\n                        style={{\n                            fontSize: '22px',\n                            fontWeight: 600,\n                            letterSpacing: '0.8px',\n                        }}\n                    />\n                    <Text\n                        id={'About.Content.Short'}\n                        style={{\n                            fontSize: '16px',\n                            fontWeight: 300,\n                            fontFamily: \"'Montserrat', sans-serif\",\n                            letterSpacing: '0.8px',\n                            minWidth: '200px',\n                            maxWidth: '500px',\n                        }}\n                    />\n                    <div style={{ display: 'flex', width: '95%', justifyContent: 'space-between', marginTop: '20px' }}>\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Resume'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                background: colors.red1,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Projects'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                background: colors.red2,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Contact'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                backgroundColor: colors.red3,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                    </div>\n                </AboutBox>\n            </AboutContainer>\n        </AboutSection>\n    );\n};\n\nexport default AboutStrip;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { colors } from '../../utils/styles/_colors';\n\nexport const MenuBarContainer = styled.header`\n    background-color: ${colors.white1};\n    padding-left: 30px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`;\n\nexport const NavBar = styled.nav`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    height: 30px;\n`;\n\nexport const NavElement = styled.button`\n    font-size: 14px;\n    color: ${colors.greyblack};\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    &:hover {\n        opacity: 0.4;\n    }\n`;\n\nexport const NavElementLink = styled(NavLink)`\n    font-size: 14px;\n    color: ${colors.greyblack};\n    text-decoration: none;\n    border: none;\n    background: transparent;\n    width: auto;\n    padding-left: 30px;\n    padding-right: 30px;\n    cursor: pointer;\n    &:hover {\n        opacity: 0.4;\n    }\n`;\n\nexport const NavContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-end;\n    min-width: 470px;\n    max-width: 800px;\n    min-height: 100px;\n`;\n","import '../../utils/styles/_fonts.css';\nimport { colors } from '../../utils/styles/_colors';\nimport styled from 'styled-components';\n\nexport const Square = styled.div`\n    background-color: ${colors.yellow2};\n    height: ${({ style }) => (style?.height ? style.height : '76px')};\n    width: ${({ style }) => (style?.width ? style.width : '88px')};\n    z-index: 100;\n`;\n\nexport const LogoContainer = styled.div`\n    padding: 30px 30px 10px;\n    flex-direction: row;\n    align-items: flex-end;\n    display: flex;\n    max-width: 1800px;\n    min-width: 280px;\n`;\n\nexport const Title = styled.p`\n    font-size: 21px;\n    font-family: 'Work Sans', sans-serif;\n    font-weight: 700;\n    line-height: 18.5px;\n    letter-spacing: 2.5px;\n    position: absolute;\n    top: 2px;\n    z-index: 100;\n`;\n","/* eslint-disable indent */\nimport React from 'react';\nimport { ILogo } from './Logo.types';\nimport { LogoContainer, Square, Title } from './Logo.styled';\nimport Text from '../../components/Text/Text';\nimport { colors } from '../../utils/styles/_colors';\n\nconst Logo: React.FC<ILogo> = (props: ILogo) => {\n    const { size } = props;\n    const { width, height } =\n        size === 'large'\n            ? { width: '176px', height: '154px' }\n            : size === 'medium'\n            ? { width: '88px', height: '76px' }\n            : { width: '44px', height: '38px' };\n    return (\n        <LogoContainer>\n            <Square style={{ width: width, height: height }} />\n            <Square\n                style={{ width: width, height: height, opacity: 0.4, position: 'absolute', left: '40px', top: '16px' }}\n            />\n            <Title>\n                the\n                <br />\n                eternal\n                <br />\n                newbie\n            </Title>\n            <Text\n                id={'Resume.Job.Position'}\n                animation={'fdInLft'}\n                style={{\n                    color: colors.grey2,\n                    lineHeight: '1px',\n                    fontSize: '16px',\n                    fontStyle: 'italic',\n                    letterSpacing: '0px',\n                    marginLeft: '12px',\n                }}\n            />\n        </LogoContainer>\n    );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { MenuBarContainer, NavBar, NavContainer, NavElement, NavElementLink } from './MenuBar.styled';\nimport Logo from '../Logo/Logo';\nimport Text from '../Text/Text';\nimport { store } from '../../utils/redux/store';\nimport { setLang } from '../../utils/redux/actions';\nimport { colors } from '../../utils/styles/_colors';\n\nconst MenuBar: React.FC = () => {\n    return (\n        <MenuBarContainer>\n            <Logo type={'full'} size={'medium'} />\n            <NavContainer>\n                <div style={{ marginRight: '25px' }}>\n                    <NavElement onClick={() => store.dispatch(setLang('es'))}>ES</NavElement>\n                    <NavElement onClick={() => store.dispatch(setLang('en'))}>EN</NavElement>\n                </div>\n                <NavBar>\n                    <NavElementLink style={{ borderRight: '1px solid black' }} to=\"/contact\">\n                        <Text\n                            id={'Generic.Contact'}\n                            style={{ color: colors.greyblack, margin: '0px', fontSize: '14px' }}\n                        />\n                    </NavElementLink>\n                    <NavElementLink style={{ borderRight: '1px solid black' }} to=\"/projects\">\n                        <Text\n                            id={'Generic.Projects'}\n                            style={{ color: colors.greyblack, margin: '0px', fontSize: '14px' }}\n                        />\n                    </NavElementLink>\n                    <NavElementLink to=\"/resume\">\n                        <Text id={'Generic.Resume'} style={{ color: colors.greyblack, fontSize: '14px' }} />\n                    </NavElementLink>\n                </NavBar>\n            </NavContainer>\n        </MenuBarContainer>\n    );\n};\n\n// export default HomePageContainer;\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(MenuBar);\n","import React from 'react';\nimport TerminalStrip from './components/TerminalStrip';\nimport AboutStrip from './components/AboutStrip';\nimport MenuBar from '../../components/MenuBar/MenuBar';\nimport { Container } from './HomePage.styled';\n\nconst HomePage: React.FC = () => {\n    return (\n        <>\n            <MenuBar />\n            <Container>\n                <TerminalStrip />\n            </Container>\n            <Container>\n                <AboutStrip />\n            </Container>\n        </>\n    );\n};\n\nexport default HomePage;\n","import React, { useEffect } from 'react';\nimport HomePage from './HomePage';\n\nconst HomePageContainer: React.FC = () => {\n    useEffect(() => {\n        document.title = 'the eternal newbie';\n    });\n\n    return <HomePage />;\n};\n\nexport default HomePageContainer;\n","import React from 'react';\n\nconst ResumeContainer: React.FC = () => {\n    return <div>resume</div>;\n};\n\nexport default ResumeContainer;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// We will create these two pages in a moment\nimport Contact from './containers/Contact/Contact.container';\nimport HomePage from './containers/HomePage/HomePage.container';\nimport Resume from './containers/Resume/Resume.container';\n\nconst App: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route exact path=\"/resume\" component={Resume} />\n        </Switch>\n    );\n};\n\nexport default App;\n","import { en } from './en';\nimport { es } from './es';\n\nexport * from './en';\nexport * from './es';\n\nexport const languages = {\n    en,\n    es,\n};\n\nexport type SupportedLanguages = keyof typeof languages;\nexport type Ids = keyof typeof en;\n","export const en = {\n    'Generic.Catchphrase': 'What are we going to code today?'.toUpperCase(),\n    'Generic.Contact': 'Contact'.toUpperCase(),\n    'Generic.Projects': 'Projects'.toUpperCase(),\n    'Generic.Resume': 'Resume'.toUpperCase(),\n    'Generic.Greetings': 'Hello!',\n    'About.Title': 'A Bit About Me',\n    'About.Content.Short':\n        'This is just a test text. Does not include real information about myself. Just testing a long paragraph.',\n    'Resume.Job.Position': 'Full-Stack Developer',\n};\n","export const es = {\n    'Generic.Catchphrase': '¿Qué vamos a codear hoy?'.toUpperCase(),\n    'Generic.Contact': 'Contacto'.toUpperCase(),\n    'Generic.Projects': 'Proyectos'.toUpperCase(),\n    'Generic.Resume': 'Currículum'.toUpperCase(),\n    'Generic.Greetings': '¡Hola!',\n    'About.Title': 'Un Poco Sobre Mí',\n    'About.Content.Short':\n        'Esto es sólo un texto de prueba. No incluye información real acerca de mí. Sólo estoy probando un párrafo largo.',\n    'Resume.Job.Position': 'Desarrollador Full-Stack',\n};\n","import React from 'react';\nimport { languages, SupportedLanguages } from './index';\nimport { connect } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ConnectedIntlProvider = (props: { children: any; lang: string }) => {\n    const { children, lang } = props;\n    return (\n        <IntlProvider messages={languages[lang as SupportedLanguages]} locale={lang} defaultLocale=\"es\">\n            {children}\n        </IntlProvider>\n    );\n};\n\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(ConnectedIntlProvider);\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { store } from './utils/redux/store';\nimport App from './App';\nimport ConnectedIntlProvider from './utils/i18n/ConnectedIntlProvider';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedIntlProvider>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </ConnectedIntlProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}