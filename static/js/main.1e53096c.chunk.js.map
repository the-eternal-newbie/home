{"version":3,"sources":["utils/redux/actions.ts","utils/redux/reducers.ts","utils/redux/store.ts","containers/Contact/Contact.container.tsx","utils/styles/_colors.ts","containers/HomePage/HomePage.styled.ts","utils/constants/consoleLog.ts","components/Terminal/Terminal.styled.ts","components/Terminal/Terminal.tsx","utils/styles/_animations.ts","components/Text/Text.styled.ts","components/Text/Text.tsx","newbie.svg","containers/HomePage/components/TerminalStrip.tsx","components/Button/Button.styled.ts","components/Button/Button.tsx","components/Portrait/Portrait.styled.ts","components/Portrait/Portrait.tsx","containers/HomePage/components/AboutStrip.tsx","containers/HomePage/HomePage.tsx","containers/HomePage/HomePage.container.tsx","containers/Resume/Resume.container.tsx","App.tsx","utils/i18n/index.ts","utils/i18n/en.ts","utils/i18n/es.ts","utils/icons/flags/usa.svg","utils/icons/flags/mexico.svg","components/MenuBar/MenuBar.styled.ts","components/Logo/Logo.styled.ts","components/Logo/Logo.tsx","components/MenuBar/MenuBar.tsx","utils/i18n/ConnectedIntlProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_ARTICLE","SET_LANG","setLang","payload","type","initialState","articles","lang","rootReducer","state","action","Object","assign","concat","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","store","createStore","persistStore","ContactContainer","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","colors","TerminalSection","styled","section","AboutSection","AboutContainer","div","AboutBox","Container","consoleLines","TerminalFrame","Dot","p","DotContainer","TerminalHeader","TerminalTextHeader","TypeWriter","pre","Bash","span","Terminal","style","background","display","color","textDecoration","onInit","typewriter","pauseFor","deleteAll","start","options","loop","strings","autoStart","getAnimation","animation","fdInBtm","fdInLft","gwLft","keyframes","StyledText","fontFamily","fontStyle","fontSize","fontWeight","lineHeight","letterSpacing","props","connect","id","TerminalStrip","src","logo","width","textAlign","minWidth","marginTop","PrimaryButton","button","SecondaryButton","CircleButton","backgroundColor","Button","onClick","navigation","text","to","getButtonType","textData","PortraitContainer","img","size","variation","filter","Portrait","url","AboutStrip","marginBottom","maxWidth","justifyContent","height","HomePage","HomePageContainer","useEffect","document","title","ResumeContainer","App","exact","path","component","Contact","Resume","languages","en","toUpperCase","es","supportedLanguages","MenuBarContainer","maxHeight","alignItems","MenuBarCollapsed","top","zIndex","position","transition","LangContainer","alignContent","borderRadius","border","LangContainerCollapsed","Line","NavBar","nav","NavElement","NavElementLink","NavLink","NavContainer","Square","LogoContainer","Title","Logo","left","padding","marginLeft","menuBar","useRef","useState","displayHome","setDisplayHome","sticky","setSticky","logit","window","pageYOffset","current","offsetTop","addEventListener","removeEventListener","matchCountry","usaFlag","mexicoFlag","borderStyle","index","length","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","location","href","substring","ref","margin","map","langOpt","cursor","dispatch","children","messages","locale","defaultLocale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1e53096c.chunk.js","sourcesContent":["export const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const SET_LANG = 'SET_LANG';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const addArticle = (payload: unknown) => {\n    return { type: ADD_ARTICLE, payload };\n};\n\nexport const setLang = (payload: string): { type: string; payload: string } => {\n    return { type: SET_LANG, payload };\n};\n","import { Reducer } from 'redux';\nimport { ADD_ARTICLE, SET_LANG } from './actions';\nimport { SupportedLanguages } from '../i18n/index';\n\nconst initialState = {\n    articles: [],\n    lang: 'en' as SupportedLanguages,\n};\n\nconst rootReducer: Reducer = (state = initialState, action) => {\n    if (action.type === ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload),\n        });\n    }\n    if (action.type === SET_LANG) {\n        return Object.assign({}, state, { lang: action.payload as SupportedLanguages });\n    }\n    return state;\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    whitelist: ['lang'],\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\n\nconst ContactContainer: React.FC = () => {\n    return <div>Contact</div>;\n};\n\nexport default ContactContainer;\n","export const LightenDarkenColor = (col: string, amt: number): string => {\n    let usePound = false;\n\n    if (col[0] == '#') {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    const num = parseInt(col, 16);\n\n    let r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    let b = ((num >> 8) & 0x00ff) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    let g = (num & 0x0000ff) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\n};\n\nexport const colors = {\n    totalwhite: '#FFFFFF',\n    white1: '#F3F3F3',\n    white2: '#E3E3E3',\n    grey1: '#D2D5D2',\n    grey2: '#A7AAA7',\n    grey3: '#7D807D',\n    grey4: '#525552',\n    greyblack: '#282B28',\n    black: '#000000',\n    yellow1: '#FFF0AB',\n    yellow2: '#FFE156',\n    yellow3: '#BFA941',\n    yellow4: '#80712B',\n    yellow5: '#403816',\n    red1: '#FFBEB6',\n    red2: '#FF9D92',\n    red3: '#FF3B25',\n    red4: '#AA2719',\n    red5: '#55140C',\n    pink1: '#F4BFDB',\n    pink2: '#C399AF',\n    pink3: '#927383',\n    pink4: '#624C58',\n    pink5: '#31262C',\n    green1: '#87ac6e',\n    purple1: '#9961A9',\n    blue1: '#60ADEC',\n};\n","import styled from 'styled-components';\nimport { colors } from '../../utils/styles/_colors';\n\nexport const TerminalSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const AboutSection = styled.section`\n    display: flex;\n    background-color: ${colors.totalwhite};\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 120%;\n`;\n\nexport const Wave = styled.div`\n    position: absolute;\n    height: 70px;\n    width: 100%;\n    background: #e0efe3;\n    &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        border-radius: 100% 50%;\n        width: 340px;\n        height: 80px;\n        background-color: white;\n        right: -5px;\n        top: 40px;\n    }\n    &:after {\n        content: '';\n        display: block;\n        position: absolute;\n        border-radius: 100% 50%;\n        width: 300px;\n        height: 70px;\n        background-color: #e0efe3;\n        left: 0;\n        top: 27px;\n    }\n`;\n\nexport const AboutContainer = styled.div`\n    max-width: 72%;\n    display: flex;\n`;\n\nexport const AboutBox = styled.div`\n    display: flex;\n    margin-left: 60px;\n    min-width: '200px';\n    flex-direction: column;\n`;\n\nexport const Container = styled.section`\n    width: 100%;\n    height: 500px;\n    margin-bottom: 220px;\n`;\n","const consoleLines: string[] = [\n    '#include\\nint main(void) {\\n\\tputs(\"Hello, world!\");\\n}',\n    '#include\\nint main() {\\n\\tstd::cout << \"Hello, world!\";\\n\\treturn 0;\\n}',\n    'document.write(\"Hello, world!\");',\n    'print \"Hello, world!\"',\n    'puts \"Hello, world!\"',\n    'println(\"Hello, world!\")',\n    'program HelloWorld;\\nbegin\\n  WriteLn(\"Hello, world!\");\\nend.',\n    'cat(\"Hello, world!\")',\n    'echo \"Hello World\"',\n];\n\nexport default consoleLines;\n","import styled from 'styled-components';\nimport { colors } from '../../utils/styles/_colors';\n\nexport const TerminalFrame = styled.div`\n    background-color: ${colors.greyblack};\n    border-radius: 6px;\n    padding-left: 20px;\n    padding-top: 30px;\n    width: 60%;\n    min-width: 400px;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n`;\n\nexport const Dot = styled.p`\n    border-radius: 50%;\n    width: 10px;\n    height: 10px;\n`;\n\nexport const DotContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width: 50px;\n    margin-left: 10px;\n`;\n\nexport const TerminalHeader = styled.div`\n    width: auto;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    font-weight: 700;\n    border-radius: 4px 4px 0px 0px;\n    font-size: 0.75em;\n    margin-left: -20px;\n    margin-top: -30px;\n    background-color: ${colors.white2};\n`;\n\nexport const TerminalTextHeader = styled.div`\n    width: 100%;\n    margin-left: 20px;\n    margin-right: 20px;\n    text-align: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nexport const TypeWriter = styled.pre`\n    color: ${colors.white1};\n    font-family: 'Roboto Mono', monospace;\n    font-weight: 700;\n    font-size: 15px;\n`;\n\nexport const Bash = styled.span`\n    font-size: 15px;\n    color: ${colors.green1};\n    font-weight: 700;\n    font-family: 'Roboto Mono', monospace;\n`;\n","import React from 'react';\nimport Typewriter from 'typewriter-effect';\nimport { consoleLines } from '../../utils/constants';\nimport { colors } from '../../utils/styles/_colors';\nimport {\n    Bash,\n    Dot,\n    DotContainer,\n    TerminalFrame,\n    TerminalHeader,\n    TerminalTextHeader,\n    TypeWriter,\n} from './Terminal.styled';\n\nconst Terminal: React.FC = () => {\n    return (\n        <TerminalFrame>\n            <TerminalHeader>\n                <DotContainer>\n                    <Dot style={{ background: colors.red2 }} />\n                    <Dot style={{ background: colors.yellow2 }} />\n                    <Dot style={{ background: colors.green1 }} />\n                </DotContainer>\n                <TerminalTextHeader>/home/the-eternal-newbie/development/portfolio/</TerminalTextHeader>\n            </TerminalHeader>\n            <div>\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>~ </p>\n                    <p style={{ display: 'inline', color: colors.green1 }}>pwd</p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.white1 }}>/home/the-eternal-newbie/</p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>~ </p>\n                    <p style={{ display: 'inline', color: colors.green1, textDecoration: 'underline' }}>\n                        development/portfolio\n                    </p>\n                </Bash>\n                <br />\n                <Bash>\n                    <p style={{ display: 'inline', color: colors.green1 }}>🠪 </p>\n                    <p style={{ display: 'inline', color: colors.blue1 }}>portfolio </p>\n                    <p style={{ display: 'inline', color: colors.pink2 }}> git:(</p>\n                    <p style={{ display: 'inline', color: colors.red3 }}>master</p>\n                    <p style={{ display: 'inline', color: colors.pink2 }}>)</p>\n                    <p style={{ display: 'inline', color: colors.yellow2 }}> ✘</p>\n                    <p style={{ display: 'inline', color: colors.purple1 }}> vim </p>\n                    <p style={{ display: 'inline', color: colors.white1 }}> helloworld </p>\n                </Bash>\n            </div>\n            <TypeWriter>\n                <Typewriter\n                    onInit={typewriter => {\n                        typewriter.pauseFor(2500).deleteAll().start();\n                    }}\n                    options={{ loop: true, strings: consoleLines, autoStart: true }}\n                />\n            </TypeWriter>\n        </TerminalFrame>\n    );\n};\n\nexport default Terminal;\n","import { Keyframes, keyframes } from 'styled-components';\n\nexport const getAnimation = (animation: string | undefined): Keyframes | undefined | string => {\n    switch (animation) {\n        case 'fdInBtm':\n            return fdInBtm;\n        case 'fdInLft':\n            return fdInLft;\n        case 'fdInRgt':\n            break;\n        case 'gwLft':\n            return gwLft;\n        default:\n            return 'none';\n    }\n};\n\nexport const rollout = keyframes`\n    0% { transform: translateY(-100px); }\n    100% { transform: translateY(0); }\n`;\n\nexport const fadeBlink = keyframes``;\n\nexport const fdInBtm = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(100%);\n    }\n    to { opacity: 1 }\n`;\n\nexport const fdInLft = keyframes`\n    from {\n        opacity: 0;\n        transform: translateX(-100%);\n    }\n    to { opacity: 1 }\n`;\n\nexport const gwLft = keyframes`\n    from {\n        width: 0%;\n    }\n    to {\n        width: 100%;\n    }\n`;\n","import styled from 'styled-components';\nimport '../../utils/styles/_fonts.css';\nimport { colors } from '../../utils/styles/_colors';\nimport { getAnimation } from '../../utils/styles/_animations';\nimport { IText } from './Text.types';\n\nexport const StyledText = styled.p`\n    font-family: ${({ style }) => (style?.fontFamily ? style.fontFamily : \"'Work Sans', sans-serif\")};\n    color: ${({ style }) => (style?.color ? style.color : colors.black)};\n    font-style: ${({ style }) => (style?.fontStyle ? style.fontStyle : 'normal')};\n    font-size: ${({ style }) => (style?.fontSize ? style.fontSize : '18px')};\n    font-weight: ${({ style }) => (style?.fontWeight ? style.fontWeight : '100')};\n    line-height: ${({ style }) => (style?.lineHeight ? style.lineHeight : '14px')};\n    letter-spacing: ${({ style }) => (style?.letterSpacing ? style.letterSpacing : '1px')};\n    animation-name: ${(props: IText) => getAnimation(props.animation)};\n    animation-duration: 1s;\n`;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { StyledText } from './Text.styled';\nimport { IText } from './Text.types';\n\nconst Text: React.FC<IText> = (props: IText) => {\n    const { id, style, lang, animation } = props;\n    return (\n        <StyledText key={`${id}-${lang}`} style={style} animation={animation}>\n            <FormattedMessage id={id} />\n        </StyledText>\n    );\n};\n\n// export default HomePageContainer;\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(Text);\n","export default __webpack_public_path__ + \"static/media/newbie.a8aea866.svg\";","import React from 'react';\nimport { TerminalSection } from '../HomePage.styled';\nimport Terminal from '../../../components/Terminal/Terminal';\nimport Text from '../../../components/Text/Text';\nimport { colors } from '../../../utils/styles/_colors';\nimport logo from '../../../newbie.svg';\n\nconst TerminalStrip: React.FC = () => {\n    return (\n        <TerminalSection>\n            <img src={logo} width={'150px'} />\n            <Text\n                id={'Generic.Catchphrase'}\n                animation={'fdInBtm'}\n                style={{\n                    color: colors.yellow2,\n                    fontFamily: \"'Montserrat', sans-serif\",\n                    fontSize: '2vw',\n                    fontWeight: 800,\n                    letterSpacing: '3px',\n                    lineHeight: '28px',\n                    textAlign: 'center',\n                    minWidth: '520px',\n                    marginTop: '10px',\n                }}\n            />\n            <Terminal />\n        </TerminalSection>\n    );\n};\n\nexport default TerminalStrip;\n","import styled from 'styled-components';\nimport { colors, LightenDarkenColor } from '../../utils/styles/_colors';\n\nexport const PrimaryButton = styled.button`\n    border-radius: 50%;\n`;\n\nexport const SecondaryButton = styled.button`\n    border-radius: 50%;\n`;\n\nexport const CircleButton = styled.button`\n    border-radius: 50%;\n    cursor: pointer;\n    border: none;\n    transition: 0.3s;\n    &:hover {\n        background-color: ${({ style }) =>\n            style?.backgroundColor\n                ? LightenDarkenColor(style.backgroundColor, -40)\n                : LightenDarkenColor(colors.red2, 20)} !important;\n    }\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Text from '../Text/Text';\nimport { CircleButton, PrimaryButton, SecondaryButton } from './Button.styled';\nimport { IButton } from './Button.types';\n\nconst Button: React.FC<IButton> = (props: IButton) => {\n    const { onClick, type, style, navigation, text, to } = props;\n\n    const getButtonType = () => {\n        const textData = (\n            <Text id={text} style={{ color: style?.color, fontSize: style?.fontSize, fontWeight: style?.fontWeight }} />\n        );\n        switch (type) {\n            case 'primary':\n                return (\n                    <PrimaryButton style={style} onClick={onClick}>\n                        {textData}\n                    </PrimaryButton>\n                );\n            case 'secondary':\n                return (\n                    <SecondaryButton style={style} onClick={onClick}>\n                        {textData}\n                    </SecondaryButton>\n                );\n            case 'circle':\n                return (\n                    <CircleButton style={style} onClick={onClick}>\n                        {textData}\n                    </CircleButton>\n                );\n            default:\n                return <button onClick={onClick} />;\n        }\n    };\n\n    return navigation && to ? <NavLink to={to}>{getButtonType()}</NavLink> : getButtonType();\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { IPortrait } from './Portrait.types';\n\nexport const PortraitContainer = styled.img`\n    -webkit-filter: grayscale(100%);\n    width: ${(props: IPortrait) => (props.size === 'small' ? '120px' : props.size === 'medium' ? '240px' : '480px')};\n    border-radius: ${(props: IPortrait) => (props.variation === 'circle' ? '50%' : '0%')};\n    filter: ${(props: IPortrait) => (props.filter === 'greyscale' ? 'grayscale(100%)' : 'none')};\n`;\n","import React from 'react';\nimport { PortraitContainer } from './Portrait.styled';\nimport { IPortrait } from './Portrait.types';\n\nconst GENERIC_PHOTO = 'https://icon-library.com/images/generic-user-icon/generic-user-icon-19.jpg';\n\nconst Portrait: React.FC<IPortrait> = (props: IPortrait) => {\n    const { filter, variation, size, url } = props;\n    return <PortraitContainer variation={variation} filter={filter} size={size} src={url ? url : GENERIC_PHOTO} />;\n};\n\nexport default Portrait;\n","import React from 'react';\nimport Button from '../../../components/Button/Button';\nimport Portrait from '../../../components/Portrait/Portrait';\nimport Text from '../../../components/Text/Text';\nimport { colors } from '../../../utils/styles/_colors';\nimport { AboutBox, AboutContainer, AboutSection } from '../HomePage.styled';\n\nconst AboutStrip: React.FC = () => {\n    return (\n        <AboutSection>\n            <AboutContainer>\n                <Portrait size={'large'} variation={'circle'} filter={'greyscale'} url={''} />\n                <AboutBox>\n                    <Text\n                        id={'Generic.Greetings'}\n                        style={{\n                            fontSize: '100px',\n                            fontWeight: 600,\n                            letterSpacing: '0.8px',\n                            marginBottom: '45px',\n                        }}\n                    />\n                    <Text\n                        id={'About.Title'}\n                        style={{\n                            fontSize: '22px',\n                            fontWeight: 600,\n                            letterSpacing: '0.8px',\n                        }}\n                    />\n                    <Text\n                        id={'About.Content.Short'}\n                        style={{\n                            fontSize: '16px',\n                            fontWeight: 300,\n                            fontFamily: \"'Montserrat', sans-serif\",\n                            letterSpacing: '0.8px',\n                            minWidth: '200px',\n                            maxWidth: '500px',\n                        }}\n                    />\n                    <div style={{ display: 'flex', width: '95%', justifyContent: 'space-between', marginTop: '20px' }}>\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Resume'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                backgroundColor: colors.pink1,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Projects'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                backgroundColor: colors.pink2,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                        <Button\n                            navigation\n                            to={'/resume'}\n                            text={'Generic.Contact'}\n                            type={'circle'}\n                            style={{\n                                width: '140px',\n                                height: '140px',\n                                backgroundColor: colors.purple1,\n                                color: colors.white1,\n                                fontSize: '16px',\n                                fontWeight: 600,\n                                textAlign: 'center',\n                            }}\n                        />\n                    </div>\n                </AboutBox>\n            </AboutContainer>\n        </AboutSection>\n    );\n};\n\nexport default AboutStrip;\n","import React from 'react';\nimport TerminalStrip from './components/TerminalStrip';\nimport AboutStrip from './components/AboutStrip';\nimport { Container } from './HomePage.styled';\n\nconst HomePage: React.FC = () => {\n    return (\n        <>\n            <Container>\n                <TerminalStrip />\n            </Container>\n            <Container>\n                <AboutStrip />\n            </Container>\n        </>\n    );\n};\n\nexport default HomePage;\n","import React, { useEffect } from 'react';\nimport HomePage from './HomePage';\n\nconst HomePageContainer: React.FC = () => {\n    useEffect(() => {\n        document.title = 'the eternal newbie';\n    });\n\n    return <HomePage />;\n};\n\nexport default HomePageContainer;\n","import React from 'react';\n\nconst ResumeContainer: React.FC = () => {\n    return <div>resume</div>;\n};\n\nexport default ResumeContainer;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// We will create these two pages in a moment\nimport Contact from './containers/Contact/Contact.container';\nimport HomePage from './containers/HomePage/HomePage.container';\nimport Resume from './containers/Resume/Resume.container';\n\nconst App: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route exact path=\"/resume\" component={Resume} />\n        </Switch>\n    );\n};\n\nexport default App;\n","import { en } from './en';\nimport { es } from './es';\n\nexport * from './en';\nexport * from './es';\n\nexport const languages = {\n    en,\n    es,\n};\n\nexport const supportedLanguages = ['en', 'es'];\nexport type SupportedLanguages = keyof typeof languages;\nexport type Ids = keyof typeof en;\n","export const en = {\n    'Generic.Catchphrase': 'What are we going to code today?'.toUpperCase(),\n    'Generic.Contact': 'Contact'.toUpperCase(),\n    'Generic.Home': 'Home'.toUpperCase(),\n    'Generic.Projects': 'Projects'.toUpperCase(),\n    'Generic.Resume': 'Resume'.toUpperCase(),\n    'Generic.Greetings': 'Hello!',\n    'About.Title': 'A Bit About Me',\n    'About.Content.Short':\n        'This is just a test text. Does not include real information about myself. Just testing a long paragraph.',\n    'Resume.Job.Position': 'Full-Stack Developer',\n};\n","export const es = {\n    'Generic.Catchphrase': '¿Qué vamos a codear hoy?'.toUpperCase(),\n    'Generic.Contact': 'Contacto'.toUpperCase(),\n    'Generic.Home': 'Inicio'.toUpperCase(),\n    'Generic.Projects': 'Proyectos'.toUpperCase(),\n    'Generic.Resume': 'Currículum'.toUpperCase(),\n    'Generic.Greetings': 'Hola!',\n    'About.Title': 'Un Poco Sobre Mí',\n    'About.Content.Short':\n        'Esto es sólo un texto de prueba. No incluye información real acerca de mí. Sólo estoy probando un párrafo largo.',\n    'Resume.Job.Position': 'Desarrollador Full-Stack',\n};\n","export default __webpack_public_path__ + \"static/media/usa.c29455bd.svg\";","export default __webpack_public_path__ + \"static/media/mexico.5a97f4f6.svg\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { colors } from '../../utils/styles/_colors';\nimport { getAnimation } from '../../utils/styles/_animations';\n\nexport const MenuBarContainer: React.CSSProperties = {\n    maxHeight: '160px',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    backgroundColor: colors.totalwhite,\n};\n\nexport const MenuBarCollapsed: React.CSSProperties = {\n    top: 0,\n    zIndex: 1000,\n    width: '100%',\n    height: '52px',\n    display: 'flex',\n    position: 'fixed',\n    alignItems: 'center',\n    backgroundColor: colors.greyblack,\n    transition: 'all 0.3s linear',\n};\n\nexport const LangContainer: React.CSSProperties = {\n    display: 'flex',\n    width: '8%',\n    alignContent: 'center',\n    justifyContent: 'center',\n    borderRadius: '6px',\n    border: `1px solid ${colors.grey3}`,\n};\n\nexport const LangContainerCollapsed: React.CSSProperties = {\n    display: 'flex',\n    alignContent: 'center',\n    justifyContent: 'space-between',\n};\n\nexport const Line = styled.div`\n    display: block;\n    border-bottom: 1px solid ${colors.grey2};\n    width: 100%;\n    animation-name: ${getAnimation('gwLft')};\n    animation-duration: 1s;\n`;\n\nexport const NavBar = styled.nav`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 30px;\n`;\n\nexport const NavElement = styled.button`\n    font-size: 14px;\n    color: ${colors.grey3};\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    &:hover {\n        opacity: 0.4;\n    }\n`;\n\nexport const NavElementLink = styled(NavLink)`\n    width: auto;\n    text-align: center;\n    padding: 10px;\n    text-decoration: none;\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    &:hover {\n        transition: 0.3s;\n        opacity: 0.4;\n    }\n`;\n\nexport const NavContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../utils/styles/_colors';\nimport { getAnimation } from '../../utils/styles/_animations';\nimport '../../utils/styles/_fonts.css';\n\nexport const Square = styled.div`\n    background-color: ${({ style }) => (style?.color ? style.color : colors.yellow2)};\n    display: flex;\n    align-items: center;\n    height: ${({ style }) => (style?.height ? style.height : '76px')};\n    width: ${({ style }) => (style?.width ? style.width : '88px')};\n    z-index: 100;\n`;\n\nexport const LogoContainer = styled.div`\n    padding: 30px 30px 10px;\n    flex-direction: row;\n    align-items: flex-end;\n    display: flex;\n    position: absolute;\n    top: 10px;\n    left: 60px;\n    max-width: 180px;\n    min-width: 80px;\n    animation-name: ${getAnimation('fdInBtm')};\n    animation-duration: 1s;\n`;\n\nexport const Title = styled.p`\n    font-size: 16px;\n    font-family: 'Work Sans', sans-serif;\n    font-weight: 700;\n    line-height: 16px;\n    margin-bottom: 10px;\n    margin-left: 2px;\n    letter-spacing: 1px;\n    z-index: 100;\n`;\n","/* eslint-disable indent */\nimport React from 'react';\nimport { ILogo } from './Logo.types';\nimport { LogoContainer, Square, Title } from './Logo.styled';\nimport { colors } from '../../utils/styles/_colors';\n\nconst Logo: React.FC<ILogo> = (props: ILogo) => {\n    const { size, type } = props;\n    const { width, height } =\n        size === 'large'\n            ? { width: '120px', height: '104px' }\n            : size === 'medium'\n            ? { width: '62px', height: '58px' }\n            : { width: '30px', height: '26px' };\n    return (\n        <LogoContainer\n            style={\n                type === 'full'\n                    ? { top: '10px', left: '60px' }\n                    : { position: 'initial', minWidth: '12%', padding: '0px 10px 10px 0px' }\n            }\n        >\n            {type === 'full' ? (\n                <>\n                    <Square style={{ width: width, height: height, zIndex: 1000 }}>\n                        <Title>the eternal newbie</Title>\n                    </Square>\n                    <Square\n                        style={{\n                            width: width,\n                            height: height,\n                            color: colors.yellow1,\n                            position: 'absolute',\n                            left: '16px',\n                            top: '18px',\n                        }}\n                    />\n                </>\n            ) : (\n                <Title style={{ color: colors.totalwhite, fontSize: '20px', marginLeft: '20px' }}>\n                    the eternal newbie\n                </Title>\n            )}\n        </LogoContainer>\n    );\n};\n\nexport default Logo;\n","import React, { useEffect, useCallback, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { supportedLanguages } from '../../utils/i18n/index';\nimport { usaFlag, mexicoFlag } from '../../utils/icons/flags/index';\nimport {\n    LangContainer,\n    Line,\n    MenuBarContainer,\n    MenuBarCollapsed,\n    NavBar,\n    NavContainer,\n    NavElement,\n    NavElementLink,\n    LangContainerCollapsed,\n} from './MenuBar.styled';\nimport Logo from '../Logo/Logo';\nimport Text from '../Text/Text';\nimport { store } from '../../utils/redux/store';\nimport { setLang } from '../../utils/redux/actions';\nimport { colors } from '../../utils/styles/_colors';\nimport { IMenuBar } from './MenuBar.types';\nimport { CSSProperties } from 'styled-components';\n\nconst MenuBar: React.FC<IMenuBar> = (props: IMenuBar) => {\n    const { lang } = props;\n    const menuBar = useRef<HTMLDivElement>(null);\n    const [displayHome, setDisplayHome] = useState(false);\n\n    const [sticky, setSticky] = useState(false);\n\n    const logit = () =>\n        window.pageYOffset > 80\n            ? !sticky && setSticky(true)\n            : menuBar.current && menuBar.current.offsetTop === window.pageYOffset && setSticky(false);\n\n    useEffect(() => {\n        const watchScroll = () => {\n            window.addEventListener('scroll', logit);\n        };\n        watchScroll();\n        return () => {\n            window.removeEventListener('scroll', logit);\n        };\n    });\n\n    const matchCountry = (lang: string) => {\n        switch (lang) {\n            case 'en':\n                return usaFlag;\n            case 'es':\n                return mexicoFlag;\n            default:\n                break;\n        }\n    };\n\n    const borderStyle = (index: number): CSSProperties => {\n        return index == supportedLanguages.length - 1\n            ? {\n                  borderTopRightRadius: '4px',\n                  borderBottomRightRadius: '4px',\n              }\n            : index === 0\n            ? {\n                  borderTopLeftRadius: '4px',\n                  borderBottomLeftRadius: '4px',\n              }\n            : {};\n    };\n\n    useEffect(() => {\n        if (window.location.href.substring(window.location.href.length - 2, window.location.href.length) !== '#/')\n            setDisplayHome(true);\n        else setDisplayHome(false);\n    }, []);\n\n    return (\n        <div ref={menuBar} style={sticky ? MenuBarCollapsed : MenuBarContainer}>\n            <Logo type={sticky ? 'minimal' : 'full'} size={'medium'} />\n            <NavContainer\n                style={\n                    sticky\n                        ? {\n                              width: '85%',\n                          }\n                        : {\n                              marginLeft: '160px',\n                              marginTop: '28px',\n                              marginBottom: '4px',\n                              width: '90%',\n                          }\n                }\n            >\n                <NavBar>\n                    <NavElementLink\n                        style={{ display: displayHome ? 'block' : 'none' }}\n                        onClick={() => setDisplayHome(false)}\n                        to=\"/\"\n                    >\n                        <Text\n                            id={'Generic.Home'}\n                            animation={'fdInLft'}\n                            style={{\n                                color: sticky ? colors.totalwhite : colors.grey3,\n                                margin: '0px',\n                                fontSize: '12px',\n                            }}\n                        />\n                    </NavElementLink>\n                    <NavElementLink onClick={() => setDisplayHome(true)} to=\"/contact\">\n                        <Text\n                            id={'Generic.Contact'}\n                            animation={'fdInLft'}\n                            style={{\n                                color: sticky ? colors.totalwhite : colors.grey3,\n                                margin: '0px',\n                                fontSize: '12px',\n                            }}\n                        />\n                    </NavElementLink>\n                    <NavElementLink onClick={() => setDisplayHome(true)} to=\"/projects\">\n                        <Text\n                            id={'Generic.Projects'}\n                            animation={'fdInLft'}\n                            style={{\n                                color: sticky ? colors.totalwhite : colors.grey3,\n                                margin: '0px',\n                                fontSize: '12px',\n                            }}\n                        />\n                    </NavElementLink>\n                    <NavElementLink onClick={() => setDisplayHome(true)} to=\"/resume\">\n                        <Text\n                            id={'Generic.Resume'}\n                            animation={'fdInLft'}\n                            style={{\n                                color: sticky ? colors.totalwhite : colors.grey3,\n                                margin: '0px',\n                                fontSize: '12px',\n                            }}\n                        />\n                    </NavElementLink>\n                </NavBar>\n                <div style={sticky ? LangContainerCollapsed : LangContainer}>\n                    {supportedLanguages.map((langOpt, index) =>\n                        sticky ? (\n                            <img\n                                src={matchCountry(langOpt)}\n                                width={'20px'}\n                                style={{ margin: '6px', cursor: 'pointer' }}\n                                onClick={() => store.dispatch(setLang(langOpt))}\n                            />\n                        ) : (\n                            <div\n                                key={`${index}${lang}-menu`}\n                                onClick={() => store.dispatch(setLang(langOpt))}\n                                style={{\n                                    backgroundColor: langOpt === lang ? colors.grey4 : colors.white1,\n                                    width: '50%',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    cursor: 'pointer',\n                                    ...borderStyle(index),\n                                }}\n                            >\n                                <img src={matchCountry(langOpt)} width={'14px'} style={{ margin: '6px' }} />\n                                <NavElement style={{ color: langOpt === lang ? colors.white1 : colors.grey4 }}>\n                                    {!sticky ? langOpt.toUpperCase() : ''}\n                                </NavElement>\n                            </div>\n                        ),\n                    )}\n                </div>\n            </NavContainer>\n            {!sticky && <Line />}\n        </div>\n    );\n};\n\n// export default HomePageContainer;\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(MenuBar);\n","import React from 'react';\nimport { languages, SupportedLanguages } from './index';\nimport { connect } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ConnectedIntlProvider = (props: { children: any; lang: string }) => {\n    const { children, lang } = props;\n    return (\n        <IntlProvider messages={languages[lang as SupportedLanguages]} locale={lang} defaultLocale=\"es\">\n            {children}\n        </IntlProvider>\n    );\n};\n\nfunction mapStateToProps(state: { lang: string }) {\n    const lang = state.lang;\n    return { lang };\n}\n\nexport default connect(mapStateToProps)(ConnectedIntlProvider);\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { store } from './utils/redux/store';\nimport App from './App';\nimport MenuBar from './components/MenuBar/MenuBar';\nimport ConnectedIntlProvider from './utils/i18n/ConnectedIntlProvider';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedIntlProvider>\n            <HashRouter>\n                <MenuBar />\n                <App />\n            </HashRouter>\n        </ConnectedIntlProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}